<?php
// src/AppBundle/Entity/Mesa.php
namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Mesa
 *
 * @ORM\Entity
 * @ORM\Table(name="mesa")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\MesaRepository")
 */
class Mesa
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer", nullable=false)
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;
	
	/**
     * @var string
     *
     * @ORM\Column(name="descripcion", type="string", length=255, nullable=false)
	 * @Assert\NotBlank()
     */
	protected $descripcion;
	
	/**
     * @var string
     *
     * @ORM\Column(name="codMesa", type="string", length=255, nullable=false)
     * @Assert\NotBlank()
     */
    protected $codMesa;

    /**
     * @var integer
     *
     * @ORM\Column(name="numPersonas", type="integer", nullable=false)
	 * @Assert\Type(
     *     type="integer",
     *     message="Este valor debe ser un nÃºmero"
     * )
     * @Assert\NotBlank()
     */
    protected $numPersonas;

    /**
     * @ORM\OneToMany(targetEntity="Reserva", mappedBy="mesa")
     */
    protected $reservas;

    /**
     * @ORM\ManyToOne(targetEntity="Restaurante", inversedBy="mesas")
     * @ORM\JoinColumn(name="idRestaurante", referencedColumnName="id", nullable=false)
     */
    protected $restaurante;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="created_at", type="datetime", nullable=false)
     */
    protected $created_at;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="updated_at", type="datetime", nullable=false)
     */
    protected $updated_at;

    /**
     * @var boolean 
     *
     * @ORM\Column(name="trash", type="boolean", options={"default":0})
     */
    protected $trash;
    
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->reservas = new \Doctrine\Common\Collections\ArrayCollection();
		
		$this->setCreatedAt(new \DateTime());
        $this->setUpdatedAt(new \DateTime());
		
		$this->setTrash(false);
    }
}
